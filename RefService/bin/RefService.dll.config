<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" />
  </system.web>

  <!--When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries.-->
  <system.serviceModel>

    <extensions>
      <behaviorExtensions>
        <add name="myMessageInspector" type="RefServices.MyEdnpointBehaviorssExtensionElement,RefService,Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>

    <services>
      <service behaviorConfiguration="defaultBahavior" name="RefServices.RefService">

        <endpoint address="https://95.42.200.54:443/RefService"
                  binding="basicHttpBinding"
                  bindingConfiguration="clientCredentialTransportCertificate"
                  contract="IRefService" />

     
        <endpoint address="https://95.42.200.54:443/RefService/custom"
                  binding="customBinding"
                  bindingConfiguration="customBinding"
                  contract="IRefService"  />


         <endpoint address="https://95.42.200.54:443/RefService/sample"
                  binding="wsHttpBinding"
                  bindingConfiguration="clientCredentialMessageAndTransportCertificate"
                  contract="IRefService" />

        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://95.42.200.54:80/RefService" />
            <!--<add baseAddress="https://95.42.200.54:443/RefService" />-->
          </baseAddresses>
        </host>
      </service>
    </services>

    <bindings>
      <basicHttpBinding>
        <binding name="clientCredentialTransportNone">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>

        <binding name="clientCredentialTransportBasic">
          <security mode="Transport">
            <transport clientCredentialType="Basic" />
          </security>
        </binding>

        <binding name="clientCredentialTransportWindows">
          <security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>

        <binding name="clientCredentialTransportCertificate">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="Certificate" />
            <message clientCredentialType="Certificate" />
          </security>
        </binding>

        <binding name="clientCredentialTransportAndMessageCertificate">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="Certificate" />
            <message clientCredentialType="Certificate" />
          </security>
        </binding>

      </basicHttpBinding>

      <wsHttpBinding>
        <binding name="clientCredentialMessageWindows">
          <security mode="Message">
            <message clientCredentialType="Windows"/>
          </security>
        </binding>

        <binding name="clientCredentialMessageAndTransportCertificate">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="Certificate"/>
            <transport clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>

      <customBinding>
        <binding name="customBinding" closeTimeout="00:20:00"
                 openTimeout="00:20:00" receiveTimeout="00:20:00"
                 sendTimeout="00:20:00">
          <security authenticationMode="CertificateOverTransport"
                    requireSecurityContextCancellation="true">
          </security>
          <httpsTransport/>
        </binding>
      </customBinding>

    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="defaultBahavior">
          <serviceMetadata httpsGetEnabled="true"  httpsGetUrl="https://95.42.200.54:443/RefService/mex"
                           httpGetEnabled="true" httpGetUrl="http://95.42.200.54:80/RefService/mex"/>
          
          <serviceDebug includeExceptionDetailInFaults="True" />
          
          <serviceCredentials>
            <serviceCertificate findValue="9e 90 19 2c cf 2b 1b 0d f8 a3 de f6 c4 a1 06 ba b2 64 3f f4"
                                storeLocation="LocalMachine" storeName="My"
                                x509FindType="FindByThumbprint" />
            <clientCertificate>
              <authentication certificateValidationMode="PeerTrust" trustedStoreLocation="LocalMachine" revocationMode="NoCheck"/>
            </clientCertificate>
          </serviceCredentials>

          <serviceSecurityAudit auditLogLocation="Application"
                                messageAuthenticationAuditLevel="SuccessOrFailure"
                                serviceAuthorizationAuditLevel="SuccessOrFailure"
                                suppressAuditFailure="false"/>

        </behavior>

      </serviceBehaviors>

      <!--<endpointBehaviors>
        <behavior name="myEndPointBihavior">
         <myMessageInspector />
        </behavior>
      </endpointBehaviors>-->
    </behaviors>

    <diagnostics>
      <messageLogging logEntireMessage="true"
                      logMessagesAtTransportLevel="true"
                      maxMessagesToLog="4000" />
    </diagnostics>

  </system.serviceModel>

  <system.diagnostics>
    <sources>

      <!--<source name="System.ServiceModel" propagateActivity="true" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
        <add initializeData="app_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener"
             name="tracelog" traceOutputOptions="Timestamp">
          <filter type=""/>
        </add>
        </listeners>
      </source>-->

      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="messages"
               type="System.Diagnostics.XmlWriterTraceListener"
               initializeData="messages.svclog"/>
        </listeners>
      </source>

    </sources>
  </system.diagnostics>

</configuration>
