<?xml version="1.0"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  <system.serviceModel>

    <!--<extensions>
      <behaviorExtensions>
        <add name="myMessageInspector" type="RefServices.MyEdnpointBehaviorssExtensionElement,RefService,Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>-->

    <services>
      <service behaviorConfiguration="defaultBahavior" name="RefServices.RefService">

        <endpoint address="https://46.10.52.198:443/RefService"
                  binding="basicHttpBinding"
                  bindingConfiguration="clientCredentialTransportCertificate"
                  contract="IRefService" />


        <endpoint address="https://46.10.52.198:443/RefService/custom"
                  binding="customBinding"
                  bindingConfiguration="customBinding"
                  contract="IRefService"  />


        <endpoint address="https://46.10.52.198:443/RefService/sample"
                 binding="wsHttpBinding"
                 bindingConfiguration="clientCredentialMessageAndTransportCertificate"
                 contract="IRefService" />

        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://46.10.52.198:80/RefService" />
            <!--<add baseAddress="https://46.10.52.198:443/RefService" />-->
          </baseAddresses>
        </host>
      </service>
    </services>

    <bindings>
      <basicHttpBinding>
        <binding name="clientCredentialTransportNone">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>

        <binding name="clientCredentialTransportBasic">
          <security mode="Transport">
            <transport clientCredentialType="Basic" />
          </security>
        </binding>

        <binding name="clientCredentialTransportWindows">
          <security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>

        <binding name="clientCredentialTransportCertificate">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>

        <binding name="clientCredentialTransportAndMessageCertificate">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="Certificate" />
            <message clientCredentialType="Certificate" />
          </security>
        </binding>

      </basicHttpBinding>

      <wsHttpBinding>
        <binding name="clientCredentialMessageWindows">
          <security mode="Message">
            <message clientCredentialType="Windows"/>
          </security>
        </binding>

        <binding name="clientCredentialMessageAndTransportCertificate">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="Certificate"/>
            <transport clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>

      <customBinding>
        <binding name="customBinding" closeTimeout="00:20:00"
                 openTimeout="00:20:00" receiveTimeout="00:20:00"
                 sendTimeout="00:20:00">
          <security authenticationMode="CertificateOverTransport"
                    requireSecurityContextCancellation="true">
          </security>
          <httpsTransport/>
        </binding>
      </customBinding>
      <!--httpsGetEnabled="true" httpsGetUrl="https://46.10.52.198:443/RefService/mex"-->
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="defaultBahavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://46.10.52.198:80/RefService/mex"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="True"/>

          <serviceCredentials>
            <serviceCertificate findValue="9e 90 19 2c cf 2b 1b 0d f8 a3 de f6 c4 a1 06 ba b2 64 3f f4"
                                storeLocation="LocalMachine" storeName="My"
                                x509FindType="FindByThumbprint" />
            <clientCertificate>
              <authentication certificateValidationMode="PeerTrust" trustedStoreLocation="LocalMachine" revocationMode="NoCheck"/>
            </clientCertificate>
          </serviceCredentials>

        </behavior>

        <!--<endpointBehaviors>
          <behavior name="myEndPointBihavior">
            <myMessageInspector />
          </behavior>
        </endpointBehaviors>-->

      </serviceBehaviors>
    </behaviors>

    <diagnostics>
      <messageLogging logEntireMessage="true"
                      logMessagesAtTransportLevel="true"
                      maxMessagesToLog="4000" />
    </diagnostics>

    <!--<protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

  <system.diagnostics>
    <sources>

      <source name="System.ServiceModel" propagateActivity="true" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add initializeData="app_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener"
               name="tracelog" traceOutputOptions="Timestamp">
            <filter type=""/>
          </add>
        </listeners>
      </source>

      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="messages"
               type="System.Diagnostics.XmlWriterTraceListener"
               initializeData="messages.svclog"/>
        </listeners>
      </source>

    </sources>
  </system.diagnostics>

</configuration>
